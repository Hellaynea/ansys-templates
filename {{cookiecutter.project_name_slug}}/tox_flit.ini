[tox]
description = Default tox environments list
envlist =
    style,{py37,py38,py39,py310}-{coverage},docs,build
isolated_build = true
isolated_build_env = true

[gh-actions]
description = The tox environment to be executed in gh-actions for a given python version
python =
    3.7: py37-coverage
    3.8: py38-coverage
    3.9: py39-coverage
    3.10: py310-coverage

[testenv]
description = Checks for project unit tests and coverage (if desired)
basepython =
    py37: python3.7
    py38: python3.8
    py39: python3.9
    py310: python3.10
    {style,reformat,docs,build}: python3
setenv =
    PYTHONUNBUFFERED = yes
    coverage: PYTEST_EXTRA_ARGS = --cov
deps =
    -r{toxinidir}/requirements/requirements_tests.txt
commands =
    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}

[testenv:style]
description = Checks project code style
skip_install = true
deps =
    -r{toxinidir}/requirements/requirements_style.txt
commands =
    black --check --diff src tests
    isort --check-only --diff --project {{ cookiecutter.pkg_name }} --section-default THIRDPARTY src tests
    flake8 src tests
    pydocstyle --match-dir='^(tests/)|(src/)'

[testenv:reformat]
description = Applies project code style
skip_install = true
deps =
    -r{toxinidir}/requirements/requirements_style.txt
commands =
    black src tests
    isort --project {{ cookiecutter.pkg_name }} --section-default THIRDPARTY src tests

[testenv:docs]
description = Check if documentation generates properly
deps =
    -r{toxinidir}/requirements/requirements_docs.txt
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -vW -bhtml

[testenv:build]
description = Check if the package builds properly
skip_install = true
deps =
    -r{toxinidir}/requirements/requirements_build.txt
commands =
    python -m build
    python -m twine check dist/*
